---
- hosts: all
  vars:
    jobs: []
  tasks:
    - name: 1st sleep
      command: sleep 20
      when: ansible_hostname == 'centos1'
      async: 45
      poll: 0
      register: out1
    - name: 2nd sleep
      command: sleep 5
      when: ansible_hostname == 'centos2'
      async: 10
      poll: 0
      register: out2
    - name: 3rd sleep
      command: sleep 5
      when: ansible_hostname == 'ubuntu1'
      async: 10
      poll: 0
      register: out3
    - name: 4th sleep
      command: sleep 5
      when: ansible_hostname == 'ubuntu2'
      async: 10
      poll: 0
      register: out4
    - name: 5th sleep
      command: sleep 5
      when: ansible_hostname == 'centos1'
      async: 10
      poll: 0
      register: out5
    - name: Capture started jobs
      set_fact:
        jobs: >
          {% if item.ansible_job_id is defined -%}
            {{ jobs + [item.ansible_job_id] }}
          {% else -%}
            {{ jobs }}
          {% endif -%}
      with_items:
        - "{{ out1 }}"
        - "{{ out2 }}"
        - "{{ out3 }}"
        - "{{ out4 }}"
        - "{{ out5 }}"
    - name: Show jobs
      debug:
        var: jobs
    - name: Wait for jobs to finish
      async_status:
        jid: "{{ item }}"
      with_items: "{{ jobs }}"
      register: jobs_result
      until: jobs_result.finished
      retries: 30
...